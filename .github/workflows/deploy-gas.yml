name: Deploy GAS to DEV or PROD by Branch

# ワークフローが実行されるトリガーを設定
on:
  push:
    branches:
      - main
      - develop
    paths:
      - 'kotaete-web/gas/**'

jobs:
  deploy-gas:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install clasp
        run: npm install -g @google/clasp

      # --- ブランチに応じて .clasp.json を動的に生成 ---
      - name: Create .clasp.json for PROD
        if: github.ref == 'refs/heads/main'
        run: |
          echo "{\"scriptId\":\"${{ secrets.PROD_SCRIPT_ID }}\",\"rootDir\":\"./kotaete-web/gas\"}" > .clasp.json
          echo "Target: PROD environment"

      - name: Create .clasp.json for DEV
        if: github.ref == 'refs/heads/develop'
        run: |
          echo "{\"scriptId\":\"${{ secrets.DEV_SCRIPT_ID }}\",\"rootDir\":\"./kotaete-web/gas\"}" > .clasp.json
          echo "Target: DEV environment"

      # --- 認証用 clasprc.json を secrets から復元 (Base64デコード) ---
      # 重要: CLASPRC_JSON_RAW には、clasp login で取得した認証情報JSONを Base64 エンコードした文字列を設定してください。
      # ローカルで `cat ~/.clasprc.json | base64` を実行して得られる文字列です。
      - name: Create .clasprc.json from Base64 secret
        run: |
          # Base64デコードした内容を変数に格納
          DECODED_CREDS=$(echo '${{ secrets.CLASPRC_JSON_RAW }}' | base64 --decode)
          # ファイルに書き込み
          echo "$DECODED_CREDS" > ~/.clasprc.json
          echo ".clasprc.json was created from secret." # ファイル作成の確認メッセージ

          # !!! 非常に重要: 以下のコマンドは機密情報全体をログに出力します。
          # !!! デバッグ目的以外では絶対に使用せず、問題解決後すぐに削除してください。
          echo "--- .clasprc.json Full Content for DEBUG (!!! SENSITIVE !!!) ---"
          echo "$DECODED_CREDS"
          echo "--- End of .clasprc.json Full Content Debug ---"

          # ファイルのパーミッションを厳しく設定 (念のため)
          chmod 600 ~/.clasprc.json


      # --- clasp 実行 ---
      # --auth-file オプションで認証ファイルのパスを明示的に指定
      - name: Push files to Google Apps Script
        run: clasp push -f --auth-file ~/.clasprc.json

      # --auth-file オプションで認証ファイルのパスを明示的に指定
      - name: Deploy to the target environment
        run: clasp deploy --description "Auto-deployment from branch ${{ github.ref_name }}" --auth-file ~/.clasprc.json
